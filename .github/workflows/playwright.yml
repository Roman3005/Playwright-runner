name: Playwright Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests and write JSON
        run: npx playwright test tests --project=chromium --reporter=json > results.json

      - name: Extract test results (file + title + status)
        id: extract
        run: |
          node -e "const fs=require('fs');
          const data=JSON.parse(fs.readFileSync('results.json','utf8'));
          const tests = [];
          for (const suite of data.suites) {
            for (const spec of suite.specs) {
              for (const t of spec.tests) {
                tests.push({
                  file: suite.file,
                  title: spec.title,
                  status: t.results[0].status
                });
              }
            }
          }
          fs.writeFileSync('summary.json', JSON.stringify(tests, null, 2));"

      - name: Upload summary.json (optional debug)
        uses: actions/upload-artifact@v4
        with:
          name: playwright-summary
          path: summary.json

      - name: Send results to n8n webhook
        env:
          N8N_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}
          N8N_INCOMING_SECRET: ${{ secrets.N8N_INCOMING_SECRET }}
        run: |
          curl -s -X POST \
            -H "Content-Type: application/json" \
            -H "X-Run-Secret: $N8N_INCOMING_SECRET" \
            --data-binary @summary.json \
            "$N8N_WEBHOOK_URL"
